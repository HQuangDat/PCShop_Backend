// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PCShop_Backend.Data;

#nullable disable

namespace PCShop_Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PCShop_Backend.Models.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<DateTime?>("AddedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("BuildId")
                        .HasColumnType("int");

                    b.Property<int?>("ComponentId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CartItemId")
                        .HasName("PK__CartItem__488B0B0A729581FD");

                    b.HasIndex("BuildId");

                    b.HasIndex("ComponentId");

                    b.HasIndex("UserId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("PCShop_Backend.Models.Component", b =>
                {
                    b.Property<int>("ComponentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComponentId"));

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ComponentId")
                        .HasName("PK__Componen__D79CF04EE1652162");

                    b.HasIndex(new[] { "CategoryId" }, "IX_Components_CategoryId");

                    b.HasIndex(new[] { "IsActive" }, "IX_Components_IsActive");

                    b.HasIndex(new[] { "Price" }, "IX_Components_Price");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("PCShop_Backend.Models.ComponentCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Componen__19093A0B5E829719");

                    b.HasIndex(new[] { "CategoryName" }, "UQ__Componen__8517B2E03F28D44D")
                        .IsUnique();

                    b.ToTable("ComponentCategories");
                });

            modelBuilder.Entity("PCShop_Backend.Models.ComponentSpec", b =>
                {
                    b.Property<int>("SpecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecId"));

                    b.Property<int>("ComponentId")
                        .HasColumnType("int");

                    b.Property<int?>("DisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("SpecKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SpecValue")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SpecId")
                        .HasName("PK__Componen__883D567B767B7E6C");

                    b.HasIndex(new[] { "SpecKey" }, "IX_ComponentSpecs_SpecKey");

                    b.HasIndex(new[] { "ComponentId", "SpecKey" }, "UQ_Component_Spec")
                        .IsUnique();

                    b.ToTable("ComponentSpecs");
                });

            modelBuilder.Entity("PCShop_Backend.Models.Pcbuild", b =>
                {
                    b.Property<int>("BuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildId"));

                    b.Property<string>("BuildName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsPublic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("BuildId")
                        .HasName("PK__PCBuilds__C51051415153D322");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("PCBuilds");
                });

            modelBuilder.Entity("PCShop_Backend.Models.PcbuildComponent", b =>
                {
                    b.Property<int>("BuildComponentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildComponentId"));

                    b.Property<int>("BuildId")
                        .HasColumnType("int");

                    b.Property<int>("ComponentId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("BuildComponentId")
                        .HasName("PK__PCBuildC__3A8113A4C1A0682C");

                    b.HasIndex("ComponentId");

                    b.HasIndex(new[] { "BuildId", "ComponentId" }, "UQ_Build_Component")
                        .IsUnique();

                    b.ToTable("PCBuildComponents");
                });

            modelBuilder.Entity("PCShop_Backend.Models.Receipt", b =>
                {
                    b.Property<int>("ReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiptId"));

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("Vietnam");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShippingAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TrackingNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReceiptId")
                        .HasName("PK__Receipts__CC08C4204027D566");

                    b.HasIndex(new[] { "CreatedAt" }, "IX_Receipts_CreatedAt");

                    b.HasIndex(new[] { "Status" }, "IX_Receipts_Status");

                    b.HasIndex(new[] { "UserId" }, "IX_Receipts_UserId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("PCShop_Backend.Models.ReceiptItem", b =>
                {
                    b.Property<int>("ReceiptItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiptItemId"));

                    b.Property<int?>("BuildId")
                        .HasColumnType("int");

                    b.Property<int?>("ComponentId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("ReceiptId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ReceiptItemId")
                        .HasName("PK__ReceiptI__AF7BE10DA8833DF8");

                    b.HasIndex("BuildId");

                    b.HasIndex("ComponentId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("ReceiptItems");
                });

            modelBuilder.Entity("PCShop_Backend.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE1AEB74034C");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__8A2B6160E4058791")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PCShop_Backend.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<int?>("AssignedToUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Medium");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("New");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TicketId")
                        .HasName("PK__Tickets__712CC607C4179BC6");

                    b.HasIndex(new[] { "AssignedToUserId" }, "IX_Tickets_AssignedToUserId");

                    b.HasIndex(new[] { "Status" }, "IX_Tickets_Status");

                    b.HasIndex(new[] { "UserId" }, "IX_Tickets_UserId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("PCShop_Backend.Models.TicketComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId")
                        .HasName("PK__TicketCo__C3B4DFCAE8A4ADD1");

                    b.HasIndex("TicketId");

                    b.HasIndex("UserId");

                    b.ToTable("TicketComments");
                });

            modelBuilder.Entity("PCShop_Backend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("Vietnam");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("LoyaltyPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C09C75399");

                    b.HasIndex(new[] { "Email" }, "IX_Users_Email");

                    b.HasIndex(new[] { "IsActive" }, "IX_Users_IsActive");

                    b.HasIndex(new[] { "RoleId" }, "IX_Users_RoleId");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E477ED2487")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105343D51E413")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PCShop_Backend.Models.CartItem", b =>
                {
                    b.HasOne("PCShop_Backend.Models.Pcbuild", "Build")
                        .WithMany("CartItems")
                        .HasForeignKey("BuildId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_CartItems_Builds");

                    b.HasOne("PCShop_Backend.Models.Component", "Component")
                        .WithMany("CartItems")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_CartItems_Components");

                    b.HasOne("PCShop_Backend.Models.User", "User")
                        .WithMany("CartItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CartItems_Users");

                    b.Navigation("Build");

                    b.Navigation("Component");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PCShop_Backend.Models.Component", b =>
                {
                    b.HasOne("PCShop_Backend.Models.ComponentCategory", "Category")
                        .WithMany("Components")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Components_Categories");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PCShop_Backend.Models.ComponentSpec", b =>
                {
                    b.HasOne("PCShop_Backend.Models.Component", "Component")
                        .WithMany("ComponentSpecs")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ComponentSpecs_Components");

                    b.Navigation("Component");
                });

            modelBuilder.Entity("PCShop_Backend.Models.Pcbuild", b =>
                {
                    b.HasOne("PCShop_Backend.Models.User", "CreatedByUser")
                        .WithMany("Pcbuilds")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_PCBuilds_Users");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("PCShop_Backend.Models.PcbuildComponent", b =>
                {
                    b.HasOne("PCShop_Backend.Models.Pcbuild", "Build")
                        .WithMany("PcbuildComponents")
                        .HasForeignKey("BuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PCBuildComponents_Builds");

                    b.HasOne("PCShop_Backend.Models.Component", "Component")
                        .WithMany("PcbuildComponents")
                        .HasForeignKey("ComponentId")
                        .IsRequired()
                        .HasConstraintName("FK_PCBuildComponents_Components");

                    b.Navigation("Build");

                    b.Navigation("Component");
                });

            modelBuilder.Entity("PCShop_Backend.Models.Receipt", b =>
                {
                    b.HasOne("PCShop_Backend.Models.User", "User")
                        .WithMany("Receipts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Receipts_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PCShop_Backend.Models.ReceiptItem", b =>
                {
                    b.HasOne("PCShop_Backend.Models.Pcbuild", "Build")
                        .WithMany("ReceiptItems")
                        .HasForeignKey("BuildId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_ReceiptItems_Builds");

                    b.HasOne("PCShop_Backend.Models.Component", "Component")
                        .WithMany("ReceiptItems")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_ReceiptItems_Components");

                    b.HasOne("PCShop_Backend.Models.Receipt", "Receipt")
                        .WithMany("ReceiptItems")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ReceiptItems_Receipts");

                    b.Navigation("Build");

                    b.Navigation("Component");

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("PCShop_Backend.Models.Ticket", b =>
                {
                    b.HasOne("PCShop_Backend.Models.User", "AssignedToUser")
                        .WithMany("TicketAssignedToUsers")
                        .HasForeignKey("AssignedToUserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Tickets_AssignedTo");

                    b.HasOne("PCShop_Backend.Models.User", "User")
                        .WithMany("TicketUsers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Tickets_Users");

                    b.Navigation("AssignedToUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PCShop_Backend.Models.TicketComment", b =>
                {
                    b.HasOne("PCShop_Backend.Models.Ticket", "Ticket")
                        .WithMany("TicketComments")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TicketComments_Tickets");

                    b.HasOne("PCShop_Backend.Models.User", "User")
                        .WithMany("TicketComments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_TicketComments_Users");

                    b.Navigation("Ticket");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PCShop_Backend.Models.User", b =>
                {
                    b.HasOne("PCShop_Backend.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_Users_Roles");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PCShop_Backend.Models.Component", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("ComponentSpecs");

                    b.Navigation("PcbuildComponents");

                    b.Navigation("ReceiptItems");
                });

            modelBuilder.Entity("PCShop_Backend.Models.ComponentCategory", b =>
                {
                    b.Navigation("Components");
                });

            modelBuilder.Entity("PCShop_Backend.Models.Pcbuild", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("PcbuildComponents");

                    b.Navigation("ReceiptItems");
                });

            modelBuilder.Entity("PCShop_Backend.Models.Receipt", b =>
                {
                    b.Navigation("ReceiptItems");
                });

            modelBuilder.Entity("PCShop_Backend.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PCShop_Backend.Models.Ticket", b =>
                {
                    b.Navigation("TicketComments");
                });

            modelBuilder.Entity("PCShop_Backend.Models.User", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Pcbuilds");

                    b.Navigation("Receipts");

                    b.Navigation("TicketAssignedToUsers");

                    b.Navigation("TicketComments");

                    b.Navigation("TicketUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
